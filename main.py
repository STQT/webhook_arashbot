import time
import sqlite3
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, InputMediaPhoto, \
    ReplyKeyboardMarkup

from configs import TOKEN, DEBUG


connection = sqlite3.connect('data.sqlite', check_same_thread=False)

cursor = connection.cursor()


def get_planirovka():
    """–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤"""
    query = cursor.execute("SELECT planirovka FROM planirovka LIMIT 5;").fetchall()
    categories = []
    bot.send_message(390736292, "Query {}".format(query))
    for i in query:
        categories.append(i[0])
    return categories


def get_galereyas():
    """–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤"""
    query = cursor.execute("SELECT galereya FROM galereya LIMIT 8;").fetchall()
    komnatas = []
    bot.send_message(390736292, "Query {}".format(query))
    for i in query:
        komnatas.append(i[0])
    return komnatas


def user_id_registration(tg_id, tg_username):
    telegram_user_id = cursor.execute(f"SELECT telegram_id FROM users WHERE telegram_id LIKE {tg_id};").fetchone()
    if telegram_user_id == None:
        sql = f"INSERT INTO users (telegram_id, username, checking) VALUES ({tg_id}, '{str(tg_username)}', 1)"
        cursor.execute(sql)  # aaa
        connection.commit()
    else:
        sql = f"Update users set checking = 1 where telegram_id = {tg_id}"
        cursor.execute(sql)
        connection.commit()


def get_active_users():
    telegram_user_id = cursor.execute(f"SELECT telegram_id FROM users WHERE checking LIKE 1").fetchall()
    return telegram_user_id


bot = telebot.TeleBot(TOKEN)

bot.send_message(390736292, "Bot are started {}".format(DEBUG))


@bot.message_handler(func=lambda msg: msg.text == "üîô–ù–∞ –≥–ª–∞–≤–Ω—É—é" or msg.text == "/start")
def send_welcome_homepage(message):
    user_id_registration(message.from_user.id, message.from_user.username)
    first_name = message.from_user.first_name
    markup = ReplyKeyboardMarkup()
    markup.add('üñº–ì–∞–ª–µ—Ä–µ—è')
    markup.add('üè¢–ü–ª–∞–Ω–∏—Ä–æ–≤–∫–∏', 'üî∏–ê–∫—Ü–∏–∏ –∏ –±–æ–Ω—É—Å—ã')
    markup.add('üìÇ–°–∫–∞—á–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥')
    markup.add('‚ùî–û –ë–∏–∑–Ω–µ—Å —Ü–µ–Ω—Ç—Ä–µ', 'üìû–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏')
    markup.add('üë•–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤')
    if message.from_user.id == 986262919 or message.from_user.id == 29895715 or message.from_user.id == 390736292:
        markup.add('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ')
    bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, *{first_name}*!\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª üëá ", reply_markup=markup,
                     parse_mode="Markdown")


@bot.message_handler(commands=["addtolist"])
def addtolist(message):
    if message.from_user.id == 986262919 or message.from_user.id == 29895715 or message.from_user.id == 390736292:
        strings = message.text.split()
        if len(strings) >= 4:
            strings.remove('/addtolist')
            str1 = ' '.join(str(x) for x in strings[2:])
            # Connecting to the SQL database

            try:
                cursor.execute("INSERT INTO clients VALUES('" + strings[0] + "','" + strings[
                    1] + "','" + str1 + "', 'NULL', 'NULL')")
                bot.reply_to(message, f"‚úÖ–î–æ–±–∞–≤–ª–µ–Ω: \n–î–æ–≥–æ–≤–æ—Ä: {strings[0]},\n–°—Ä–æ–∫: {strings[1]},\n–ù–∞–∑–≤–∞–Ω–∏–µ: {str1}")
                connection.commit()

            except Exception as e:
                bot.reply_to(message, "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è –æ—à–∏–±–∫–∞ –±–æ—Ç–∞ –ª–∏–±–æ —ç—Ç–æ—Ç –Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ —É–∂–µ –µ—Å—Ç—å! –ö–æ–¥ –æ—à–∏–±–∫–∏:")
                bot.send_message(message, e)




        else:
            bot.send_message(message.chat.id, "–í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª–∏ –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω–æ")

    else:
        bot.send_message(message.from_user.id, "–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ!")


@bot.message_handler(commands=["getlist"])
def getlist(message):
    if message.from_user.id == 986262919 or message.from_user.id == 29895715 or message.from_user.id == 390736292:
        try:
            cursor.execute("SELECT * FROM clients")
            firmalar = cursor.fetchall()
            for row in firmalar:
                if row[3] != 'NULL':
                    bot.send_message(message.chat.id,
                                     f"–î–æ–≥–æ–≤–æ—Ä = {row[0]} –°—Ä–æ–∫ = {row[1]} –§–∏—Ä–º–∞: {row[2]}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{row[3]}")
                else:
                    bot.send_message(message.chat.id,
                                     f"–î–æ–≥–æ–≤–æ—Ä = {row[0]} –°—Ä–æ–∫ = {row[1]} –§–∏—Ä–º–∞: {row[2]}, –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")

        except:
            bot.send_message(message.chat.id, "–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö")
    else:
        bot.send_message(message.from_user.id, "–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ!")


@bot.message_handler(commands=["delete"])
def deleteitem(message):
    if message.from_user.id == 986262919 or message.from_user.id == 29895715 or message.from_user.id == 390736292:
        strings = message.text.split()
        if len(strings) >= 3:
            strings.remove('/delete')

            # Connecting to the SQL database

            try:
                client_ids = int(strings[0])
                sroks = strings[1]

                cursor.execute(f"DELETE FROM clients WHERE client_id = {client_ids} AND srok = '{sroks}'")
                bot.reply_to(message, f"–î–æ–≥–æ–≤–æ—Ä –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º {client_ids} –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω ")
                connection.commit()

            except Exception as e:
                bot.reply_to(message, "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è –æ—à–∏–±–∫–∞ –±–æ—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:")
                bot.send_message(message.from_user.id, e)

        else:
            bot.send_message(message.chat.id, "–í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª–∏ –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω–æ")

    else:
        bot.send_message(message.from_user.id, "–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ!")


@bot.message_handler(commands=["opros"])
def oprosadd(message):
    if message.from_user.id == 986262919 or message.from_user.id == 29895715 or message.from_user.id == 390736292:
        strings = message.text.split()
        if len(strings) >= 2:
            strings.remove('/opros')
            # Connecting to the SQL database
            try:
                links = strings[0]
                sql = '''UPDATE opros
                                            SET link = ?
                                            WHERE id_link = ?'''
                cursor.execute(sql, (links, 1)).fetchone()
                connection.commit()
                bot.reply_to(message, f"–°—Å—ã–ª–∫–∞: {links} –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ–ø—Ä–æ—Å–Ω–∏–∫!")


            except Exception as e:
                bot.reply_to(message, "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è –æ—à–∏–±–∫–∞ –±–æ—Ç–∞, –∫–æ–¥ –æ—à–∏–±–∫–∏:")
                bot.send_message(message.from_user.id, e)

        else:
            bot.send_message(message.chat.id, "–í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª–∏ –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω–æ")

    else:
        bot.send_message(message.from_user.id, "–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ!")


@bot.message_handler(func=lambda msg: msg.text == "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ")
def administrirovaniye(msg):
    markup = ReplyKeyboardMarkup()
    markup.add('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å—Ç')
    markup.add('–ì–∞–ª–µ—Ä–µ—è')
    markup.add('–ü–ª–∞–Ω–∏—Ä–æ–≤–∫–∏', '–ê–∫—Ü–∏–∏ –∏ –±–æ–Ω—É—Å—ã')
    markup.add('–°–∫–∞—á–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥')
    markup.add('–ù–∞–º –¥–æ–≤–µ—Ä—è—é—Ç', '–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏')
    markup.add('–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞')
    message = '–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞ –Ω–∞–ø–∏—à–∏—Ç–µ: /addtolist <nomer dogovora> <srok> <nazvaniye>\n\n' \
              '–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –≤ –±–∞–∑–µ –Ω–∞–ø–∏—à–∏—Ç–µ: /getlist \n' \
              '–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞ —Å –±–∞–∑—ã –Ω–∞–ø–∏—à–∏—Ç–µ: /delete <nomer dogovora> <srok>' \
              '–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –≤ –æ–ø—Ä–æ—Å–Ω–∏–∫ –Ω–∞–ø–∏—à–∏—Ç–µ: /opros <—Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø—Ä–æ—Å>'
    bot.send_message(msg.from_user.id, message, reply_markup=markup)


admin_dict = {}
n = 1


@bot.message_handler(func=lambda msg: msg.text == "–ì–∞–ª–µ—Ä–µ—è")
def get_list_galereya_admin(message):
    galereyas = get_galereyas()
    keyboard = ReplyKeyboardMarkup()
    for galereya in galereyas:
        keyboard.add(f'{galereya}')
    keyboard.add('üîô–ù–∞ –≥–ª–∞–≤–Ω—É—é')
    msg = bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞', reply_markup=keyboard)
    bot.register_next_step_handler(msg, get_name_galereya_admin)


def get_name_galereya_admin(message):
    try:
        if message.text == u'üîô–ù–∞ –≥–ª–∞–≤–Ω—É—é':
            raise Exception('–û—Ç–º–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏')
        name = message.text
        telegram_id = message.from_user.id
        admin_dict[telegram_id] = n
        admin_dict['name'] = name
        msg = bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–∞–π–ª—ã –±–µ–∑ —Å–∂–∞—Ç–∏—è (–º–∞–∫—Å 500–∫–±).'
                                                ' –ò –∫–æ–≥–¥–∞ –Ω–∞–¥–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –∂–º–∏ /submit', )
        bot.register_next_step_handler(msg, get_file_galereya_admin)

    except Exception as ex:
        if ex.args == ('–û—Ç–º–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',):
            send_welcome_homepage(message)

        bot.send_message(message.chat.id, "[!] error - {}".format(str(ex)))


def get_file_galereya_admin(message):
    text = admin_dict['name']

    try:
        if message.text == u'üîô–ù–∞ –≥–ª–∞–≤–Ω—É—é':
            raise Exception('–û—Ç–º–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏')
        elif message.text != '/submit':
            if message.document:
                save_dir = 'media'
                file_name = message.document.file_name
                file_id_info = bot.get_file(message.document.file_id)
                downloaded_file = bot.download_file(file_id_info.file_path)
                src = file_name

                with open(save_dir + "/" + src, 'wb') as new_file:
                    new_file.write(downloaded_file)
                cursor.execute(
                    f"UPDATE galereya SET pic{admin_dict[message.from_user.id]} = '{str(file_name)}' WHERE galereya = '{text}'").fetchone()
                connection.commit()

                msg = bot.send_message(message.chat.id,
                                       "[*] –§–∞–π–ª ‚Ññ {} –¥–æ–±–∞–≤–ª–µ–Ω:\n–ò–º—è —Ñ–∞–π–ª–∞ - {}\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ {} - —Ñ–æ—Ç–æ\n–õ–∏–±–æ –Ω–∞–∂–º–∏ –Ω–∞ /submit".format(
                                           admin_dict[message.from_user.id], str(file_name),
                                           admin_dict[message.from_user.id] + 1))

                if admin_dict[message.from_user.id] == 10:
                    bot.send_message(message.chat.id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Ç—ã –¥–æ—à–µ–ª –¥–æ –ø—Ä–µ–¥–µ–ª–∞! –ù–∞–∂–º–∏ –ù–∞ –≥–ª–∞–≤–Ω—É—é –∏–ª–∏ –Ω–∞ /start")
                    return
                bot.register_next_step_handler(msg, get_file_galereya_admin)
                admin_dict[message.from_user.id] += 1


            else:
                msg = bot.send_message(message.chat.id,
                                       f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–∂–∞—Ç—ã–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ\n–°–µ–π—á–∞—Å —Ç—ã –æ—Ç–ø—Ä–∞–≤–∏—à—å –º–Ω–µ {n}-—Ñ–æ—Ç–æ")
                bot.register_next_step_handler(msg, get_file_galereya_admin)
        else:
            for i in range(admin_dict[message.from_user.id], 11):
                cursor.execute(
                    f"UPDATE galereya SET pic{i} = NULL WHERE galereya = '{text}'").fetchone()
            connection.commit()
            bot.send_message(message.chat.id, f"–î–æ–±–∞–≤–ª–µ–Ω–æ {admin_dict[message.from_user.id] - 1} —Ñ–æ—Ç–æ!")

    except Exception as ex:
        if ex.args == ('–û—Ç–º–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',):
            send_welcome_homepage(message)

        bot.send_message(message.chat.id, "[!] error - {}".format(str(ex)))


@bot.message_handler(func=lambda msg: msg.text == "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å—Ç")
def get_sms_admin(message):
    msg = bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')
    bot.register_next_step_handler(message, get_answer_photo)


def get_answer_photo(message):
    if message.photo:
        photo = bot.get_file(message.photo[2].file_id)
        sql = """UPDATE post SET img = ?, text = ?  WHERE id = 1"""
        cursor.execute(sql, (str(photo.file_path), str(message.caption),)).fetchone()
        connection.commit()
        downloaded_file = bot.download_file(photo.file_path)
        bot.send_photo(message.chat.id, downloaded_file, message.caption)
        markup = ReplyKeyboardMarkup()
        markup.add('–î–∞! –§–æ—Ç–æ')
        markup.add('–ù–µ—Ç!')
        bot.send_message(message.chat.id, "–ü—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤—ë–ª?",
                         reply_markup=markup)
        bot.register_next_step_handler(message, get_sms_text_admin)
    elif message.text:
        bot.send_message(message.chat.id, message.text)
        sql = """UPDATE post SET text = ? WHERE id = 1"""
        cursor.execute(sql, (str(message.text),)).fetchone()
        connection.commit()
        markup = ReplyKeyboardMarkup()
        markup.add('–î–∞! –¢–µ–∫—Å—Ç')
        markup.add('–ù–µ—Ç!')
        bot.send_message(message.chat.id, "–ü—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤—ë–ª?",
                         reply_markup=markup)
        bot.register_next_step_handler(message, get_sms_text_admin)
    else:
        bot.send_message(message.chat.id, "–¢–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ñ–æ—Ç–æ –∏ —Ç–µ–∫—Å—Ç–æ–º")
        bot.register_next_step_handler(message, get_answer_photo)


def get_sms_text_admin(message):
    query = cursor.execute("SELECT * FROM post;").fetchone()
    users = get_active_users()
    if message.text == '–î–∞! –§–æ—Ç–æ':
        for send in users:
            downloaded_file = bot.download_file(query[0])
            try:
                bot.send_photo(send[0], downloaded_file, query[1])
            except Exception as e:
                sql = """Update users set checking = ? where telegram_id = ?;"""
                cursor.execute(sql, (0, send[0])).fetchone()
                connection.commit()
                bot.send_message(message.chat.id, f"net takogo id {send[0]}")
            time.sleep(0.03)
        send_welcome_homepage(message)
    elif message.text == '–î–∞! –¢–µ–∫—Å—Ç':
        for send in users:
            try:
                bot.send_message(send[0], query[1])
            except Exception as e:
                sql = """Update users set checking = ? where telegram_id = ?;"""
                cursor.execute(sql, (0, send[0])).fetchone()
                connection.commit()
                bot.send_message(message.chat.id, f"net takogo id {send[0]}")
            time.sleep(0.03)
        send_welcome_homepage(message)
    elif message.text == '–ù–µ—Ç!':
        bot.send_message(message.chat.id, "–ü–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        bot.register_next_step_handler(message, get_answer_photo)


@bot.message_handler(func=lambda msg: msg.text == "–ü–ª–∞–Ω–∏—Ä–æ–≤–∫–∏")
def get_list_planirovka_admin(message):
    planirovkas = get_planirovka()
    keyboard = ReplyKeyboardMarkup()
    for planirovka in planirovkas:
        keyboard.add(f'{planirovka}')
    keyboard.add('üîô–ù–∞ –≥–ª–∞–≤–Ω—É—é')
    msg = bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞', reply_markup=keyboard)
    bot.register_next_step_handler(msg, get_name_planirovka_admin)


def get_name_planirovka_admin(message):
    name = message.text
    telegram_id = message.from_user.id
    admin_dict['planirovka'] = name
    msg = bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–∞–π–ª—ã –±–µ–∑ —Å–∂–∞—Ç–∏—è (–º–∞–∫—Å 500–∫–±).')
    bot.register_next_step_handler(msg, get_file_planirovka_admin)


def get_file_planirovka_admin(message):
    text = admin_dict['planirovka']
    try:
        if text == u'üîô–ù–∞ –≥–ª–∞–≤–Ω—É—é':
            raise Exception('–û—Ç–º–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏')
        if message.document:
            save_dir = 'media'
            file_name = message.document.file_name

            link = message.document
            file_id_info = bot.get_file(message.document.file_id)
            downloaded_file = bot.download_file(file_id_info.file_path)
            src = file_name

            with open(save_dir + "/" + src, 'wb') as new_file:
                new_file.write(downloaded_file)
            cursor.execute(
                f"UPDATE planirovka SET pic1 = '{message.document.file_id}' WHERE planirovka = '{text}'").fetchone()
            connection.commit()

            bot.send_message(message.chat.id,
                             "[*] –§–∞–π–ª –¥–æ–±–∞–≤–ª–µ–Ω:\n–ò–º—è —Ñ–∞–π–ª–∞ - {}\n".format(str(file_name)))
            administrirovaniye(message)

        else:
            bot.send_message(message.chat.id,
                             f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–∂–∞—Ç—ã–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ\n–°–µ–π—á–∞—Å —Ç—ã –æ—Ç–ø—Ä–∞–≤–∏—à—å –º–Ω–µ {n}-—Ñ–æ—Ç–æ")


    except Exception as ex:
        print(ex)
        if ex.args == ('–û—Ç–º–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',):
            send_welcome_homepage(message)

        bot.send_message(message.chat.id, "[!] error - {}".format(str(ex)))

@bot.message_handler(func=lambda msg: msg.text == "‚úî–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞")
def get_infrastructure(message):
    text_message = cursor.execute("SELECT text FROM texts WHERE menu = 'Preimushestva'").fetchone()

    bot.send_message(message.from_user.id, text_message)



@bot.message_handler(func=lambda msg: msg.text == "–°–∫–∞—á–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥")
def get_catalogue_admin(message):
    msg = bot.send_message(message.from_user.id, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–∞–π–ª –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ')
    bot.register_next_step_handler(msg, get_catalogue_text_admin)


def get_catalogue_text_admin(message):
    try:
        if message.document:
            save_dir = 'media'
            file_name = message.document.file_name
            file_id_info = bot.get_file(message.document.file_id)
            downloaded_file = bot.download_file(file_id_info.file_path)
            src = file_name

            with open(save_dir + "/" + src, 'wb') as new_file:
                new_file.write(downloaded_file)
            cursor.execute(f"UPDATE texts SET text = 'file! {str(file_name)}' WHERE menu = 'Katalog'").fetchone()
            connection.commit()
            bot.send_message(message.chat.id,
                             "[*] File added:\nFile name - {}\nFile directory - {}".format(str(file_name),
                                                                                           str(save_dir)))
        else:
            cursor.execute(f"UPDATE texts SET text = '{str(message.text)}' WHERE menu = 'Katalog'").fetchone()
            connection.commit()
            bot.send_message(message.chat.id, "–ò–∑–º–µ–Ω–µ–Ω —Ç–µ–∫—Å—Ç")

    except Exception as ex:
        bot.send_message(message.chat.id, "[!] error - {}".format(str(ex)))


@bot.message_handler(func=lambda msg: msg.text == "–ù–∞–º –¥–æ–≤–µ—Ä—è—é—Ç")
def get_doveryayut_admin(message):
    msg = bot.send_message(message.from_user.id, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–∞–π–ª! –ù–µ –±–æ–ª–µ–µ 200–∫–±!\n'
                                                 '–ö–∞–∫ —Å–∂–∞—Ç—å –±–µ–∑ —Ñ–æ—Ç–æ—à–æ–ø–∞?\n'
                                                 '–û—Ç–ø—Ä–∞–≤–∏—à—å –æ—Ä–∏–≥–∏–Ω–∞–ª —Å —Å–∂–∞—Ç–∏–µ–º –≤ –æ–±–ª–∞–∫–æ –≤ —Å–≤–æ–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º–µ –∏ —Å–∫–∞—á–∞–µ—à—å –µ–≥–æ\n'
                                                 '–∏ –æ—Ç–ø—Ä–∞–≤–∏—à—å –º–Ω–µ —Å–∂–∞—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–µ–∑ —Å–∂–∞—Ç–∏—è! –¢–æ–ª—å–∫–æ –Ω–µ –æ—à–∏–±—Å—è –∂–∏–∑–Ω—å –±–æ—Ç–∞ –≤ —Ç–≤–æ–∏—Ö —Ä—É–∫–∞—Ö! :)')
    bot.register_next_step_handler(msg, get_file_doveryayut_admin)


def get_file_doveryayut_admin(message):
    try:
        if message.document:
            save_dir = 'media'
            file_name = message.document.file_name
            file_id_info = bot.get_file(message.document.file_id)
            downloaded_file = bot.download_file(file_id_info.file_path)
            src = file_name

            with open(save_dir + "/" + src, 'wb') as new_file:
                new_file.write(downloaded_file)
            cursor.execute(f"UPDATE texts SET text = '{str(file_name)}' WHERE menu = 'Doveryayut'").fetchone()
            connection.commit()
            bot.send_message(message.chat.id,
                             "[*] File added:\nFile name - {}\nFile directory - {}".format(str(file_name),
                                                                                           str(save_dir)))
        else:
            msg = bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –±–µ–∑ —Å–∂–∞—Ç–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
            bot.register_next_step_handler(msg, get_file_doveryayut_admin)

    except Exception as ex:
        bot.send_message(message.chat.id, "[!] error - {}".format(str(ex)))


@bot.message_handler(func=lambda msg: msg.text == "–ê–∫—Ü–∏–∏ –∏ –±–æ–Ω—É—Å—ã")
def get_aksiya_bonus_admin(message):
    msg = bot.send_message(message.from_user.id, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç')
    bot.register_next_step_handler(msg, get_text_bonus_admin)


def get_text_bonus_admin(message):
    try:
        text = message.text
        cursor.execute(f"UPDATE texts SET text = '{str(text)}' WHERE menu = 'Bonusi'").fetchone()
        connection.commit()
        bot.send_message(message.chat.id, "–ò–∑–º–µ–Ω–µ–Ω —Ç–µ–∫—Å—Ç")

    except Exception as ex:
        bot.send_message(message.chat.id, "[!] error - {}".format(str(ex)))


@bot.message_handler(func=lambda msg: msg.text == "–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏")
def get_kontakt_admin(message):
    msg = bot.send_message(message.from_user.id, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç')
    bot.register_next_step_handler(msg, get_text_kontakt_admin)


def get_text_kontakt_admin(message):
    try:
        text = message.text
        cursor.execute(f"UPDATE texts SET text = '{str(text)}' WHERE menu = 'Kontakt'").fetchone()
        connection.commit()
        bot.send_message(message.chat.id, "–ò–∑–º–µ–Ω–µ–Ω —Ç–µ–∫—Å—Ç")

    except Exception as ex:
        bot.send_message(message.chat.id, "[!] error - {}".format(str(ex)))


@bot.message_handler(func=lambda msg: msg.text == "–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞")
def get_preimushestva_admin(message):
    msg = bot.send_message(message.from_user.id, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç')
    bot.register_next_step_handler(msg, get_text_preimushestva_admin)


def get_text_preimushestva_admin(message):
    try:
        text = message.text
        cursor.execute(f"UPDATE texts SET text = '{str(text)}' WHERE menu = 'Preimushestva'").fetchone()
        connection.commit()
        bot.send_message(message.chat.id, "–ò–∑–º–µ–Ω–µ–Ω —Ç–µ–∫—Å—Ç")

    except Exception as ex:
        bot.send_message(message.chat.id, "[!] error - {}".format(str(ex)))


@bot.message_handler(func=lambda msg: msg.text == "üìÇ–°–∫–∞—á–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥")
def get_catalogue(message):
    text = cursor.execute("SELECT text FROM texts WHERE menu = 'Katalog'").fetchone()
    x = text[0].rsplit("! ")
    if x[0] == 'file':
        doc = open(f'media/{x[1]}', 'rb')
        bot.send_document(message.chat.id, doc)
    else:
        bot.send_message(message.chat.id, text)


@bot.message_handler(func=lambda msg: msg.text == "üìû–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏")
def support(message):
    text = cursor.execute("SELECT text FROM texts WHERE menu = 'Kontakt'").fetchone()
    bot.send_message(message.chat.id, text)


@bot.message_handler(func=lambda msg: msg.text == "üî∏–ê–∫—Ü–∏–∏ –∏ –±–æ–Ω—É—Å—ã")
def get_action_bonus(message):
    text = cursor.execute("SELECT text FROM texts WHERE menu = 'Bonusi'").fetchone()
    bot.send_message(message.from_user.id, text)


@bot.message_handler(func=lambda msg: msg.text == "‚ùî–û –ë–∏–∑–Ω–µ—Å —Ü–µ–Ω—Ç—Ä–µ")
def o_nas(message):
    markup = ReplyKeyboardMarkup()
    markup.add('üó∫–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞')
    markup.add('‚úî–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞', 'üí≥–û–ø–ª–∞—Ç–∞')
    markup.add('üöä–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å')
    markup.add('ü§ù–ù–∞–º –¥–æ–≤–µ—Ä—è—é—Ç')
    markup.add('üîô–ù–∞ –≥–ª–∞–≤–Ω—É—é')
    bot.send_message(message.chat.id, "–ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç–µ—Å—å –Ω–∞—à–∏–º –±–∏–∑–Ω–µ—Å —Ü–µ–Ω—Ç—Ä–æ–º",
                     reply_markup=markup)


@bot.message_handler(func=lambda msg: msg.text == "üó∫–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞")
def get_infrastructure(message):
    msg = (
        'üè¢  –ë–∏–∑–Ω–µ—Å —Ü–µ–Ω—Ç—Ä ¬´ARASH¬ª- —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–µ–ª–æ–≤–æ–π –∫–æ–º–ø–ª–µ–∫—Å, –æ—Ç–≤–µ—á–∞—é—â–∏–π –≤—ã—Å–æ–∫–∏–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –±–∏–∑–Ω–µ—Å-—Ü–µ–Ω—Ç—Ä–∞. –û–±—ä–µ–∫—Ç —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –≤ —Ü–µ–Ω—Ç—Ä–µ –≥.–¢–∞—à–∫–µ–Ω—Ç–∞ –≤ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π –±–ª–∏–∑–æ—Å—Ç–∏ –≥–æ—Ä–æ–¥—Å–∫–æ–≥–æ —Å–∫–≤–µ—Ä–∞.\n\n'

        'üìç –ë–¶ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: –ú–∏—Ä–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω, —É–ª.–ò—Å—Ç–∏–∫–±–æ–ª, –¥–æ–º 34\n\n'

        '–†—è–¥–æ–º —Å –ë–∏–∑–Ω–µ—Å –¶–µ–Ω—Ç—Ä–æ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã:\n\n'

        '‚ûñ –ñ–ö Infinity\n\n'

        '‚ûñ –ö–∞—Ñ–µ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã: Efendi,  CoffeeMilk, Yapona Mama\n\n'

        '‚ûñ –°—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç Korzinka.uz')
    photo = open('media/infrastruktura.jpg', "rb")
    bot.send_location(message.from_user.id, latitude=41.301801, longitude=69.288465)
    bot.send_photo(message.from_user.id, photo, msg)
    photo.close()



@bot.message_handler(func=lambda msg: msg.text == "üöä–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å")
def get_transport(message):
    msg = (
        'üìç –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞ —Å–æ–∑–¥–∞–µ—Ç —É–¥–æ–±—Å—Ç–≤–æ –¥–ª—è –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –¥–æ–±–∏—Ä–∞—Ç—å—Å—è –¥–æ –ë–¶ –±–µ–∑ –ª–∏—á–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ —Å—Ä–µ–¥—Å—Ç–≤–∞.\n\n'
        'üöä –ë–¶ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–±–ª–∏–∑–∏ –∞–≤—Ç–æ–±—É—Å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏, –∞ —Ç–∞–∫–∂–µ –≤ 15 –º–∏–Ω—É—Ç–Ω–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –æ—Ç —Ç—Ä–µ—Ö —Å—Ç–∞–Ω—Ü–∏–π –º–µ—Ç—Ä–æ: –¢–∞—à–∫–µ–Ω—Ç, –°–∫–≤–µ—Ä –ê–º–∏—Ä–∞ –¢–µ–º—É—Ä–∞, –Æ–Ω—É—Å –†–∞–¥–∂–∞–±–∏.')

    bot.send_message(message.from_user.id, msg)


@bot.message_handler(func=lambda msg: msg.text == "üí≥–û–ø–ª–∞—Ç–∞")
def get_price(message):
    msg = ('üí≥ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è 100% –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ–º –≤ —Å—É–º–∞—Ö –∏–ª–∏ –≤–∞–ª—é—Ç–µ.\n\n'
           'üîò –ê—Ä–µ–Ω–¥–æ–≤–∞–≤ –ø–æ–º–µ—â–µ–Ω–∏–µ –í—ã –Ω–µ –±—É–¥–µ—Ç–µ –¥—É–º–∞—Ç—å:\n\n'
           '‚úîÔ∏è –æ —Ä–µ–º–æ–Ω—Ç–µ\n\n'
           '‚úîÔ∏è –æ –ø–æ–∫—É–ø–∫–µ –º–µ–±–µ–ª–∏\n\n'
           '‚úîÔ∏è –æ–± –æ–ø–ª–∞—Ç–µ –∑–∞ –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã (—ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏—è, —Ç–µ–ø–ª–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ, –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ)\n\n'
           '‚úîÔ∏è –æ –ø–∞—Ä–∫–æ–≤–æ—á–Ω–æ–º –º–µ—Å—Ç–µ\n\n'
           '‚úîÔ∏è –æ–± —É–±–æ—Ä–∫–µ\n\n'
           '‚úîÔ∏è –æ–± –æ—Ö—Ä–∞–Ω–µ\n\n'
           'üîò –í—Å–µ –≤—ã—à–µ—É–∫–∞–∑–∞–Ω–Ω–æ–µ —É–∂–µ –≤–∫–ª—é—á–µ–Ω–æ –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞—Ä–µ–Ω–¥—ã.')
    bot.send_message(message.from_user.id, msg)


@bot.message_handler(func=lambda msg: msg.text == "ü§ù–ù–∞–º –¥–æ–≤–µ—Ä—è—é—Ç")
def get_brands(message):
    text = cursor.execute("SELECT text FROM texts WHERE menu = 'Doveryayut'").fetchone()
    doc = open(f'media/{text[0]}', 'rb')
    bot.send_photo(message.chat.id, doc)
    doc.close()


@bot.message_handler(func=lambda msg: msg.text == "üè¢–ü–ª–∞–Ω–∏—Ä–æ–≤–∫–∏")
def get_prices_command(msg: telebot.types.Message):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–ª–∞–Ω–∏—Ä–æ–≤–æ–∫"""
    prices = get_planirovka()
    keyboard = InlineKeyboardMarkup(row_width=2)
    for price in prices:
        keyboard.add(
            InlineKeyboardButton(
                text=price,
                callback_data=f'prc_{price}')
        )

    bot.send_message(msg.from_user.id, '–ü–ª–∞–Ω–∏—Ä–æ–≤–∫–∏:', reply_markup=keyboard)
    # print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{}' –ø–µ—Ä–µ—à–µ–ª –∫ –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–µ".format(get_user_id(msg)))


@bot.callback_query_handler(lambda call: call.data.startswith('prc_'))
def get_products_price_callback(callback_query: CallbackQuery):
    query = callback_query.data.replace('prc_', '')  # –£–±—Ä–∞—Ç—å –ø–æ–º–µ—Ç–∫—É callback'–æ–≤
    cursor.execute(f"Select pic1 From planirovka WHERE planirovka like '%{query}%'")
    photo_sql = cursor.fetchone()
    bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id,
                          text=query,
                          reply_markup=None)
    bot.send_document(callback_query.from_user.id, photo_sql[0], reply_markup='')


@bot.message_handler(func=lambda msg: msg.text == "üñº–ì–∞–ª–µ—Ä–µ—è")
def get_galereya(msg: telebot.types.Message):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–ª–∞–Ω–∏—Ä–æ–≤–æ–∫"""
    prices = get_galereyas()
    keyboard = InlineKeyboardMarkup(row_width=2)
    for price in prices:
        keyboard.add(
            InlineKeyboardButton(
                text=price,
                callback_data=f'gal_{price}')
        )

    bot.send_message(msg.from_user.id, '–ì–∞–ª–µ—Ä–µ—è:', reply_markup=keyboard)
    # print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{}' –ø–µ—Ä–µ—à–µ–ª –∫ –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–µ".format(get_user_id(msg)))


@bot.callback_query_handler(lambda call: call.data.startswith('gal_'))
def get_products_price_callback(callback_query: CallbackQuery):
    query = callback_query.data.replace('gal_', '')  # –£–±—Ä–∞—Ç—å –ø–æ–º–µ—Ç–∫—É callback'–æ–≤
    cursor.execute(f"Select * From galereya WHERE galereya like '%{query}%'")
    rows_in = cursor.fetchall()
    photo_list = []
    for i in rows_in[0][2:]:
        if i != None:
            photo_list.append(open(f'media/{i}', 'rb'))
    if photo_list:
        media = [InputMediaPhoto(i) for i in photo_list]
        bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id,
                              text=query,
                              reply_markup=None)
        bot.send_media_group(callback_query.from_user.id, media)
        list(map(lambda f: f.close(), photo_list))
    else:
        bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id,
                              text=query,
                              reply_markup=None)
        bot.send_message(callback_query.from_user.id, f"–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –í–∞—Å –∑–∞ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –Ω–∞—à–∏–º –±–∏–∑–Ω–µ—Å —Ü–µ–Ω—Ç—Ä–æ–º!\n"
                                                      f"–í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –∑–¥–µ—Å—å –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Ä–∞–∑–¥–µ–ª–∞ *{query}*",
                         parse_mode="Markdown")


user_dict = {}


class User:
    def __init__(self, client_id):
        self.client_id = client_id
        self.srok = None
        self.srok_temp = None
        self.nazvaniye = None
        self.username = None
        self.telegram_id = None


@bot.message_handler(func=lambda msg: msg.text == "üë•–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤")
def send_welcome(message):
    username = message.from_user.username
    telegram_id = message.from_user.id
    first_name = message.from_user.first_name
    cursor.execute(f"Select * From clients WHERE telegram_id like '%{telegram_id}%'")
    user_data = cursor.fetchone()
    # print(user_data, "user_data")
    try:
        if not user_data:
            markup = ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            markup.add('üîô–ù–∞ –≥–ª–∞–≤–Ω—É—é')
            msg = bot.send_message(message.chat.id,
                                   '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–æ–π–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é, –¥–ª—è —ç—Ç–æ–≥–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ò–ù–ù –Ω–æ–º–µ—Ä —Ñ–∏—Ä–º—ã –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n'
                                   '"*123456789*" - –±–µ–∑ –∫–∞–≤—ã—á–µ–∫', reply_markup=markup, parse_mode="Markdown")

            bot.register_next_step_handler(msg, process_name_step)
        elif user_data[4] == telegram_id:
            markup = ReplyKeyboardMarkup()
            markup.add('–ù—É–∂–Ω–∞ —Å—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å?')
            markup.add('–û—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –ø—Ä–æ—Å—å–±—ã')
            markup.add('–ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å')
            markup.add('üîö–í—ã–π—Ç–∏')
            markup.add('üîô–ù–∞ –≥–ª–∞–≤–Ω—É—é')
            bot.send_message(message.chat.id, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å {first_name}!", reply_markup=markup)

    except Exception as e:
        bot.reply_to(message, f'–û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ /start \n–ö–æ–¥ –æ—à–∏–±–∫–∏: {e}')


def process_name_step(message):
    try:
        chat_id_here = message.chat.id
        inn = message.text
        first_name = message.from_user.first_name
        if inn == u'üîô–ù–∞ –≥–ª–∞–≤–Ω—É—é':
            raise Exception('–û—Ç–º–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏')

        elif not inn.isdigit():
            msg = bot.reply_to(message, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã!')
            bot.register_next_step_handler(msg, process_name_step)
            return


        elif len(inn) != 9:
            msg = bot.reply_to(message, '–í—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ –ò–ù–ù. –û–Ω –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 9 —Ü–∏—Ñ—Ä')
            bot.register_next_step_handler(msg, process_name_step)
            return

        user = User(inn)  # –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ User –∏ –ø—Ä–∏—Å–≤–æ–µ–Ω–∏–µ –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π user –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
        user_dict[chat_id_here] = user  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∫–ª–∞—Å—Å–∞ User –∫ –≥–ª–æ–±–∞–ª—å–Ω–æ–º—É —Å–ª–æ–≤–∞—Ä—é user_dict

        cursor.execute(f"Select * From clients WHERE inn like '%{inn}%'")
        rows_in = cursor.fetchall()
        if not rows_in:
            raise Exception("–í –±–∞–∑–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –¥–æ–≥–æ–≤–æ—Ä–∞")

        elif inn == rows_in[0][0]:
            user.client_id = rows_in[0][0]
            user.srok = rows_in[0][1]
            user.nazvaniye = rows_in[0][2]
            user.username = message.from_user.username
            user.telegram_id = chat_id_here
            sql = '''UPDATE clients
                        SET username = ?,
                        telegram_id = ? WHERE inn = ?'''
            cursor.execute(sql, (user.username, chat_id_here, user.client_id)).fetchone()
            connection.commit()
            markup = ReplyKeyboardMarkup()
            markup.add('–ù—É–∂–Ω–∞ —Å—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å?')
            markup.add('–û—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –ø—Ä–æ—Å—å–±—ã')
            markup.add('–ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å')
            markup.add('üîö–í—ã–π—Ç–∏')
            markup.add('üîô–ù–∞ –≥–ª–∞–≤–Ω—É—é')
            bot.send_message(message.chat.id, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å: _{first_name}!_ \n–í–∞—à–∞ —Ñ–∏—Ä–º–∞: *{rows_in[0][2]}*",
                             parse_mode="Markdown", reply_markup=markup)
        else:
            raise Exception("–î–∞—Ç–∞ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç")
    except Exception as e:
        if e.args == ('–î–∞—Ç–∞ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç',):
            msg = bot.send_message(message.chat.id, "–î–∞—Ç–∞ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç")
            bot.register_next_step_handler(msg, process_name_step)
        elif e.args == ('–í –±–∞–∑–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –¥–æ–≥–æ–≤–æ—Ä–∞',):
            msg = bot.send_message(message.chat.id, "–í –±–∞–∑–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –¥–æ–≥–æ–≤–æ—Ä–∞!")
            bot.register_next_step_handler(msg, process_name_step)
        elif e.args == ('–û—Ç–º–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',):
            bot.send_message(message.chat.id, '–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é.')
            send_welcome_homepage(message)
        else:
            msg = bot.send_message(message.chat.id, e.args)
            msg = bot.send_message(message.chat.id, "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è –æ—à–∏–±–∫–∞ –±–æ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–±–µ—Ä–∏—Ç–µ /start")
            bot.register_next_step_handler(msg, process_name_step)


@bot.message_handler(func=lambda msg: msg.text == "üîö–í—ã–π—Ç–∏")
def logout(message):
    sql = '''UPDATE clients
                            SET username = ?,
                            telegram_id = ? WHERE telegram_id = ?'''
    cursor.execute(sql, ('NULL', 'NULL', message.from_user.id)).fetchone()
    connection.commit()
    bot.send_message(message.from_user.id, "–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã")
    send_welcome_homepage(message)


GROUP_ID = -598502968


@bot.message_handler(func=lambda msg: msg.text == "–û—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –ø—Ä–æ—Å—å–±—ã")
def predlojeniye_first(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –í–∞—à–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –ø—Ä–æ—Å—å–±—ã")
    bot.register_next_step_handler(msg, process_predlojeniye_step)


def process_predlojeniye_step(message):
    try:
        text = message.text
        if text == u'–ù—É–∂–Ω–∞ —Å—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å?':
            raise Exception('–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –ø–æ–º–æ—â—å')
        elif text == u'–û—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –ø—Ä–æ—Å—å–±—ã' or text == u'–ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å':
            msg = bot.reply_to(message,
                               '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /cancel!')
            bot.register_next_step_handler(msg, process_predlojeniye_step)
            return
        elif text == '/cancel':
            send_welcome(message)
            return
        msg = message.chat.id
        telegram_id = message.from_user.id
        msg_id = message.message_id
        cursor.execute(f"Select * From clients WHERE telegram_id like '%{telegram_id}%'")
        user_data = cursor.fetchone()
        bot.send_message(GROUP_ID, f"–ù–æ–≤–∞—è –ø—Ä–æ—Å—å–±–∞ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç —Ñ–∏—Ä–º—ã: *{user_data[2]}*\n"
                                   f"üëáüëáüëáüëáüëáüëáüëáüëáüëá", parse_mode="Markdown")
        bot.forward_message(GROUP_ID, msg, msg_id)

        bot.send_message(message.chat.id, "–í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏ –ø—Ä–æ—Å—å–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ")
    except Exception as e:
        pomosh_first(message)


@bot.message_handler(func=lambda msg: msg.text == "–ù—É–∂–Ω–∞ —Å—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å?")
def pomosh_first(message):
    msg = bot.send_message(message.chat.id, "–û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ—é –ø—Ä–æ—Å—å–±—É –∏ –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è")
    bot.register_next_step_handler(msg, process_pomosh_step)
    pass


def process_pomosh_step(message):
    try:
        text = message.text
        if text == u'–û—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –ø—Ä–æ—Å—å–±—ã':
            raise Exception('–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è')
        elif text == u'–ù—É–∂–Ω–∞ —Å—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å?' or text == u'–ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å':
            msg = bot.reply_to(message,
                               '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ—Å—å–±—É –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /cancel!')
            bot.register_next_step_handler(msg, process_predlojeniye_step)
            return
        elif text == '/cancel':
            send_welcome(message)
            return
        msg = message.chat.id
        telegram_id = message.from_user.id
        msg_id = message.message_id
        cursor.execute(f"Select * From clients WHERE telegram_id like '%{telegram_id}%'")
        user_data = cursor.fetchone()
        bot.send_message(GROUP_ID, f"–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–º–æ—â—å —Ñ–∏—Ä–º–µ: *{user_data[2]}*\n"
                                   f"üëáüëáüëáüëáüëáüëáüëáüëáüëá", parse_mode="Markdown")
        bot.forward_message(GROUP_ID, msg, msg_id)

        bot.send_message(message.chat.id, "–í–∞—à–∞ –ø—Ä–æ—Å—å–±–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏")
    except Exception as e:
        predlojeniye_first(message)


@bot.message_handler(func=lambda msg: msg.text == "–ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å")
def oprosnik(message):
    link = cursor.execute("SELECT link FROM opros").fetchone()
    bot.send_message(message.from_user.id,
                     f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–æ–π–¥–∏—Ç–µ –æ–ø—Ä–æ—Å –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞–∂–∞–≤ –Ω–∞ —Å—Å—ã–ª–∫—É –Ω–∏–∂–µ:\n[–û–ü–†–û–° –¢–£–¢]({link[0]}) ",
                     disable_web_page_preview=True, parse_mode="MarkdownV2")


if __name__ == "__main__" and DEBUG:
    bot.infinity_polling()
